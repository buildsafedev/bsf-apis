// (-- api-linter: core::0191::java-package=disabled
// (-- api-linter: core::0191::java-outer-classname=disabled
// (-- api-linter: core::0191::java-multiple-files=disabled
//     aip.dev/not-precedent: We're doing This as this is a Go server --)
// (-- api-linter: core::0191::proto-package=disabled

syntax = "proto3";

package buildsafe.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "github.com/buildsafedev/bsf-apis;bsfv1";

// SearchService defines the methods for searching packages
service SearchService {
  // ListPackages returns a list of packages available. Mostly meant for browsing if a package is available or not
  rpc ListPackages(ListPackagesRequest) returns (ListPackagesResponse) {
    option (google.api.http) = {
      post: "/v1/packages";
      body: "*";
    };
  }

  // FetchPackage returns a package based on the name
  rpc FetchPackages(FetchPackagesRequest) returns (FetchPackagesResponse) {
    option (google.api.http) = {get: "/v1/packages/{name=*}"};
  }

  // FetchPackageVersion returns a package based on the name and version
  rpc FetchPackageVersion(FetchPackageVersionRequest) returns (FetchPackageVersionResponse) {
    option (google.api.http) = {get: "/v1/packages/{name=*}/{version=*}"};
  }

  // FetchVulnerabilities returns a list of vulnerabilities for a package based on the name and version
  rpc FetchVulnerabilities(FetchVulnerabilitiesRequest) returns (FetchVulnerabilitiesResponse) {
    option (google.api.http) = {get: "/v1/packages/{name=*}/{version=*}/vulnerabilities"};
  }

  // FetchMaintainersInfo returns the maintainer information for a package
  rpc FetchMaintainersInfo(FetchMaintainersInfoRequest) returns (Maintainer) {
    option (google.api.http) = {get: "/v1/packages/{name=*}/{version=*}/maintainers"};
  }
}

// FetchPackageRequest is the request message for FetchPackage.
message FetchPackagesRequest {
  string name = 1;
}

// FetchPackageResponse is the response message for FetchPackage.
message FetchPackagesResponse {
  repeated Package packages = 1;
}

// FetchMaintainersInfoRequest is the request message for FetchMaintainersInfo.
message FetchMaintainersInfoRequest {
  string name = 1;
  string version = 2;
}

// ListPackagesRequest is the request message for ListPackages.
message ListPackagesRequest {
  int32 page_size = 1 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lt = 1000
  ];
  int32 page_token = 2 [(buf.validate.field).int32.gt = 0];

  // search_term is optional. It can be any term that's close to package name, matches a term in the package description or homepage url.
  string search_term = 3;
}

// ListPackagesResponse is the response message for ListPackages.
message ListPackagesResponse {
  repeated string packages = 1;
  int32 next_page_token = 2;
  int32 total_pages = 3;
}

// Package is the package definition
message Package {
  string name = 1;
  string revision = 2;
  string version = 3;
  string description = 4;
  string homepage = 5;
  bool free = 6;
  string spdx_id = 7;
  uint64 epoch_seconds = 8;
  repeated string platforms = 9;
  string cpe = 10;
  string attr_name = 11;
  string maintainer_name  = 12;
}

message Maintainer {
  string email = 1;
  string github = 2;
  string github_id = 3;
  repeated string keys = 4;
  string name = 5;
}

// FetchPackageVersionRequest is the request message for FetchPackageVersion.
message FetchPackageVersionRequest {
  string name = 1 [(buf.validate.field).required = true];
  string version = 2 [(buf.validate.field).required = true];
}

// FetchPackageVersionResponse is the response message for FetchPackageVersion.
message FetchPackageVersionResponse {
  Package package = 1;
}

// FetchVulnerabilitiesRequest is the request message for FetchVulnerabilities.
message FetchVulnerabilitiesRequest {
  string name = 1 [(buf.validate.field).required = true];
  string version = 2 [(buf.validate.field).required = true];
}

// Vulnerability is the vulnerability definition
message FetchVulnerabilitiesResponse {
  repeated Vulnerability vulnerabilities = 1;
}

message Vulnerability {
  string id = 1;
  string severity = 2;
  repeated Cvss cvss = 3;
}

message Cvss {
  string vector = 1;
  string version = 2;
  string source = 3;
  string type = 4;
  Cvss3Metrics metrics = 5;
}

message Cvss3Metrics {
  float base_score = 1;
  float exploitability_score = 2;
  float impact_score = 3;
}
