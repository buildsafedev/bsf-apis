/**
 * @fileoverview gRPC-Web generated client stub for buildsafe.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: buildsafe/v1/project.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var buf_validate_validate_pb = require('../../buf/validate/validate_pb.js')

var google_api_annotations_pb = require('../../google/api/annotations_pb.js')
const proto = {};
proto.buildsafe = {};
proto.buildsafe.v1 = require('./project_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.buildsafe.v1.ProjectServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.buildsafe.v1.ProjectServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buildsafe.v1.CreateProjectRequest,
 *   !proto.buildsafe.v1.CreateProjectResponse>}
 */
const methodDescriptor_ProjectService_CreateProject = new grpc.web.MethodDescriptor(
  '/buildsafe.v1.ProjectService/CreateProject',
  grpc.web.MethodType.UNARY,
  proto.buildsafe.v1.CreateProjectRequest,
  proto.buildsafe.v1.CreateProjectResponse,
  /**
   * @param {!proto.buildsafe.v1.CreateProjectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buildsafe.v1.CreateProjectResponse.deserializeBinary
);


/**
 * @param {!proto.buildsafe.v1.CreateProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buildsafe.v1.CreateProjectResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buildsafe.v1.CreateProjectResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buildsafe.v1.ProjectServiceClient.prototype.createProject =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/CreateProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_CreateProject,
      callback);
};


/**
 * @param {!proto.buildsafe.v1.CreateProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buildsafe.v1.CreateProjectResponse>}
 *     Promise that resolves to the response
 */
proto.buildsafe.v1.ProjectServicePromiseClient.prototype.createProject =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/CreateProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_CreateProject);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buildsafe.v1.GetProjectRequest,
 *   !proto.buildsafe.v1.GetProjectResponse>}
 */
const methodDescriptor_ProjectService_GetProject = new grpc.web.MethodDescriptor(
  '/buildsafe.v1.ProjectService/GetProject',
  grpc.web.MethodType.UNARY,
  proto.buildsafe.v1.GetProjectRequest,
  proto.buildsafe.v1.GetProjectResponse,
  /**
   * @param {!proto.buildsafe.v1.GetProjectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buildsafe.v1.GetProjectResponse.deserializeBinary
);


/**
 * @param {!proto.buildsafe.v1.GetProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buildsafe.v1.GetProjectResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buildsafe.v1.GetProjectResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buildsafe.v1.ProjectServiceClient.prototype.getProject =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/GetProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_GetProject,
      callback);
};


/**
 * @param {!proto.buildsafe.v1.GetProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buildsafe.v1.GetProjectResponse>}
 *     Promise that resolves to the response
 */
proto.buildsafe.v1.ProjectServicePromiseClient.prototype.getProject =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/GetProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_GetProject);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buildsafe.v1.ListProjectsRequest,
 *   !proto.buildsafe.v1.ListProjectsResponse>}
 */
const methodDescriptor_ProjectService_ListProjects = new grpc.web.MethodDescriptor(
  '/buildsafe.v1.ProjectService/ListProjects',
  grpc.web.MethodType.UNARY,
  proto.buildsafe.v1.ListProjectsRequest,
  proto.buildsafe.v1.ListProjectsResponse,
  /**
   * @param {!proto.buildsafe.v1.ListProjectsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buildsafe.v1.ListProjectsResponse.deserializeBinary
);


/**
 * @param {!proto.buildsafe.v1.ListProjectsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buildsafe.v1.ListProjectsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buildsafe.v1.ListProjectsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buildsafe.v1.ProjectServiceClient.prototype.listProjects =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/ListProjects',
      request,
      metadata || {},
      methodDescriptor_ProjectService_ListProjects,
      callback);
};


/**
 * @param {!proto.buildsafe.v1.ListProjectsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buildsafe.v1.ListProjectsResponse>}
 *     Promise that resolves to the response
 */
proto.buildsafe.v1.ProjectServicePromiseClient.prototype.listProjects =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/ListProjects',
      request,
      metadata || {},
      methodDescriptor_ProjectService_ListProjects);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buildsafe.v1.RenameProjectRequest,
 *   !proto.buildsafe.v1.RenameProjectResponse>}
 */
const methodDescriptor_ProjectService_RenameProject = new grpc.web.MethodDescriptor(
  '/buildsafe.v1.ProjectService/RenameProject',
  grpc.web.MethodType.UNARY,
  proto.buildsafe.v1.RenameProjectRequest,
  proto.buildsafe.v1.RenameProjectResponse,
  /**
   * @param {!proto.buildsafe.v1.RenameProjectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buildsafe.v1.RenameProjectResponse.deserializeBinary
);


/**
 * @param {!proto.buildsafe.v1.RenameProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buildsafe.v1.RenameProjectResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buildsafe.v1.RenameProjectResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buildsafe.v1.ProjectServiceClient.prototype.renameProject =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/RenameProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_RenameProject,
      callback);
};


/**
 * @param {!proto.buildsafe.v1.RenameProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buildsafe.v1.RenameProjectResponse>}
 *     Promise that resolves to the response
 */
proto.buildsafe.v1.ProjectServicePromiseClient.prototype.renameProject =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/RenameProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_RenameProject);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.buildsafe.v1.DeleteProjectRequest,
 *   !proto.buildsafe.v1.DeleteProjectResponse>}
 */
const methodDescriptor_ProjectService_DeleteProject = new grpc.web.MethodDescriptor(
  '/buildsafe.v1.ProjectService/DeleteProject',
  grpc.web.MethodType.UNARY,
  proto.buildsafe.v1.DeleteProjectRequest,
  proto.buildsafe.v1.DeleteProjectResponse,
  /**
   * @param {!proto.buildsafe.v1.DeleteProjectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.buildsafe.v1.DeleteProjectResponse.deserializeBinary
);


/**
 * @param {!proto.buildsafe.v1.DeleteProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.buildsafe.v1.DeleteProjectResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.buildsafe.v1.DeleteProjectResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.buildsafe.v1.ProjectServiceClient.prototype.deleteProject =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/DeleteProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_DeleteProject,
      callback);
};


/**
 * @param {!proto.buildsafe.v1.DeleteProjectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.buildsafe.v1.DeleteProjectResponse>}
 *     Promise that resolves to the response
 */
proto.buildsafe.v1.ProjectServicePromiseClient.prototype.deleteProject =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/buildsafe.v1.ProjectService/DeleteProject',
      request,
      metadata || {},
      methodDescriptor_ProjectService_DeleteProject);
};


module.exports = proto.buildsafe.v1;

